@VERTEX

struct ArrayStruct {
    arr1: [float; 2] = [1., 2],
    arr2: [float; 3],
    test: int = 1,
}

impl ArrayStruct {
    fn test(self) -> float {

    }
}

fn array_test(array: [float; 2]) -> [float; 5] {
    let test: ArrayStruct {
        arr2: [1, 2, 3.],
    };

    let x = test.arr1[1];
    // test.test() = 3;
    test.arr1[1] = 2;
}

fn test() -> [double; 3] {
    return [1., 2., 1 as uint];
}

fn main() {
    let test_array: [double; 2] = [1, -2.];

    let test2 = [1, 2, 3.];

    test2[0 + 1] = 12;

    let z = 2 * -test_array[1 + 1];
    let x = test_array[0];

    const verticies: [vec4; 3] = [
        vec4(  0.,  10., 0.5, 1.0),
        vec4(-10.,  -1., 0.5, 1.0),
        vec4( 10.,  -1., 0.5, 1.0)
    ];

    gl_Position = verticies[gl_VertexID];
}