fn sd_circle(point: vec2, radius: float) -> float {
    return length(point) - radius;
}

fn main() {
    // [-1, 1], then scale x to aspect ratio
    let uv = (gl_FragCoord.xy / window_dimensions - 0.5) * 2.;
    uv.x *= window_dimensions.x / window_dimensions.y;

    let color = vec3(0.);

    let radius = 0.4;
    let pos = uv - vec2(cos(time)*0.05, sin(time)*0.08);
    let dist = sd_circle(pos, radius)*0.7;

    dist -= sin(uv.x * 5. + time * 4.) * 0.05;
    dist -= sin(uv.y * 3.5 + time * 2.) * 0.1;

    color += smoothstep(0.005, 0., dist);
    color += 1./(dist*dist + 1.)*0.5;

    color *= vec3(sin(time*0.7)*0.2, sin(time*0.4)*0.1, cos(time*0.8)*0.6) + 0.5;
    
    out_color = vec4(sqrt(color), 1.);
}