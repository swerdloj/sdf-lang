/*

    *Very* simple example of sdf-lang

    Demonstrated here:
    - Structs
      - Fields and defaults

    - Functions
      - Parameters
      - Return types

    - Scenes

    - Statements
      - Statement blocks

    - Expressions
      - Function calls

    - Comments

*/

// Fields must be typed. May have defaults. Final comma optional.
struct some_struct {
    field1: int = 2.3,
    no_default: int,
    no_final_comma: int = default3
}

// Functions are the same as Rust
fn function(param1: type1, param2: type2) -> return_type {
    1 / 2 != 8.3;
}

// Scenes will allow for SDF interactions (point manipulation, etc.)
scene main {
    let x = 1 + 2 * 3;

    let s: some_struct {
        field1: x,
        field2: x + 3 - function_call(),
        no_final_comma: 4 == 3 + 1
    };

    function(1, 2);

    let y = true && false;
}